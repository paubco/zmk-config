// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

   keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q           &kp W           &kp F               &kp P             &kp B            &kp J      &kp L              &kp U               &kp Y            &kp SEMICOLON
&ht LEFT_GUI A  &ht LEFT_ALT R  &ht LEFT_CONTROL S  &ht LEFT_SHIFT T  &kp G            &kp M      &ht RIGHT_SHIFT N  &ht LEFT_CONTROL E  &ht RIGHT_ALT I  &ht RIGHT_GUI O
&kp X           &kp C           &kp D               &kp V             &kp Z            &kp K      &kp H              &kp COMMA           &kp DOT          &kp TAB
                                                    &mo 2             &kp BACKSPACE    &kp SPACE  &mo 1
            >;
        };

        sym {
            bindings = <
&kp EXCL      &kp RA(AT)       &kp RA(NUMBER_3)  &kp DLLR      &kp PRCNT           &trans  &trans            &trans    &trans        &trans
&kp NUBS      &kp RIGHT_BRACE  &kp LS(N8)        &kp RA(LBKT)  &kp LS(N7)          &trans  &kp LEFT_BRACKET  &kp APOS  &kp LS(APOS)  &kp LS(NUMBER_3)
&kp LS(NUBS)  &kp RA(NUHS)     &kp LS(N9)        &kp RA(RBKT)  &kp RA(NUMBER_1)    &trans  &trans            &trans    &trans        &trans
                                                 &trans        &kp DELETE          &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans      &trans  &trans  &trans  &trans    &kp MINUS         &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END
&trans      &trans  &trans  &trans  &trans    &kp LS(QUESTION)  &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT
&caps_word  &trans  &trans  &trans  &trans    &kp PLUS          &kp MINUS       &kp SLASH      &kp ASTERISK  &kp ESCAPE
                            &trans  &trans    &kp ENTER         &trans
            >;
        };

        fun {
            bindings = <
&sys_reset   &trans  &kp C_BRI_DEC  &kp C_BRI_INC  &bt BT_SEL 0    &kp QUESTION  &kp N7  &kp N8  &kp N9  &sys_reset
&bootloader  &trans  &kp C_VOL_DN   &kp C_VOL_UP   &bt BT_SEL 1    &kp LS(N0)    &kp N4  &kp N5  &kp N6  &bootloader
&trans       &trans  &trans         &bt BT_CLR     &bt BT_SEL 2    &kp N0        &kp N1  &kp N2  &kp N3  &trans
                                    &trans         &trans          &trans        &trans
            >;
        };
    };
};
